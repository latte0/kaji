version: '3'
services:
  api-web: &app_base
    build:
      context: ../
      dockerfile: ./docker/rails/Dockerfile.test
    command: /bin/sh -c "sh script/docker_build_api-web.sh && ./run_development.sh"
    volumes:
      - ../rails/:/app:delegated
    expose:
      - '3000'
    tty: true
    depends_on:
      - api-redis
      - api-db
    stdin_open: true
    environment:
      #これを設定しないと鍵関係で怒られて起動出来ない
      - "RAILS_ENV=test"
      - "RACK_ENV=test"
      - "MINIO_ACCESS_KEY=develop"
      - "MINIO_SECRET_KEY=password"
      - "SECRET_KEY_BASE=c4aa6c0a48a36077a701c12beeddebee"
      - "RAILS_MASTER_KEY=c4aa6c0a48a36077a701c12beeddebee"
      #ACTUAL_ENVを消せば、.envを読み込むので環境変数が変わる。
      - "ACTUAL_ENV=test"
      - "DATABASE_HOST=api-db"
      - "DATABASE_PORT=3306"
      - "DATABASE_NAME=kaji_test"
      - "DATABASE_USERNAME=root"
      - "DATABASE_PASSWORD=root"
      - "REDIS_HOST=api-redis"
      - "REDIS_PORT=6379"
      - "REDIS_USERNAME=redis"
      - "REDIS_PASSWORD=redis"
      - "RAILS_LOG_TO_STDOUT=true"
      - "USE_DOCKER=true"
      #とりあえずローカルはkajiのS3から持ってくる(minio使わない場合)
      - "S3_BUCKET=kaji-test"
      - "DEFAULT_HOST=https://localhost"
      - "USE_AWS_S3=true"
      #これは設定してなくてもreadはできる
      - AWS_REGION
      - S3_ACCESS_KEY_ID
      - S3_SECRET_ACCESS_KEY
      - FACEBOOK_KEY
      - FACEBOOK_SECRET
      - TWITTER_API_KEY
      - TWITTER_API_SECRET
      - GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET
      - LINE_KEY
      - LINE_SECRET

  api-s3:
    image: minio/minio:latest
    restart: always
    command: server /data
    volumes:
      - ./s3/data:/data:delegated
    environment:
      - "MINIO_ACCESS_KEY=develop"
      - "MINIO_SECRET_KEY=password"
    ports:
      - "9000:9000"

  createbuckets:
    image: minio/mc
    depends_on:
      - api-s3
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc config host add kaji-test http://api-s3:9000 develop password --api S3v4;
      /usr/bin/mc rm -r --force kaji-test/kaji-test;
      /usr/bin/mc mb kaji-test/kaji-test;
      /usr/bin/mc policy set download kaji-test/kaji-test;
      exit 0;
      "

  api-redis:
    image: redis:latest
    restart: always
    expose:
      - '6379'

  api-db:
    image: mysql:5.7
    restart: always
    env_file: ./mysql/.env
    volumes:
      - ./test_db/data:/var/lib/mysql:delegated
      - ./test_db/my.cnf:/etc/mysql/conf.d/my.cnf:delegated
    ports:
      - '3306:3306'

  api-batch:
    build:
      context: ../
      dockerfile: ./docker/salon/Dockerfile.test
    command: "./run_batch_development.sh"
    volumes:
      - ../rails/:/app:delegated
      - /app/tmp/cache
    tty: true
    depends_on:
      - api-redis
      - api-s3
      - api-db
    stdin_open: true
    environment:
      - "RAILS_ENV=test"
      - "RACK_ENV=test"
      - "AWS_ACCESS_KEY_ID=test"
      - "AWS_SECRET_ACCESS_KEY=test"
      - "ASSET_HOST=null"
      #とりあえずローカルはkajiのS3から持ってくる(minio使わない場合)
      - "S3_BUCKET=kaji-test"
      - "SECRET_KEY_BASE=c4aa6c0a48a36077a701c12beeddebee"
      - "RAILS_MASTER_KEY=c4aa6c0a48a36077a701c12beeddebee"
      - "MINIO_ACCESS_KEY=develop"
      - "MINIO_SECRET_KEY=password"
      #これによって.envから読み込むか読み込まないか決める
      - "ACTUAL_ENV=test"
      - "DATABASE_HOST=api-db"
      - "DATABASE_PORT=3306"
      - "DATABASE_NAME=kaji_development"
      - "DATABASE_USERNAME=root"
      - "DATABASE_PASSWORD=root"
      - "REDIS_HOST=api-redis"
      - "REDIS_PORT=6379"
      - "REDIS_USERNAME=redis"
      - "REDIS_PASSWORD=redis"
      - "RAILS_LOG_TO_STDOUT=true"
      - "USE_DOCKER=true"
      - "WEBPACK_HOST=webpack"
      - "WEBPACK_ENDPOINT=webpack:3035"
      - "USE_AWS_S3=true"
      - SECURE_SALT
      - SECURE_SALT_HASH
      - AWS_REGION
      - S3_ACCESS_KEY_ID
      - S3_SECRET_ACCESS_KEY
